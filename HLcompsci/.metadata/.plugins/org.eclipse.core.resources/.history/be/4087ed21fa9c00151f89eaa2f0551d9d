import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintWriter;
import java.util.NoSuchElementException;
import java.util.Scanner;

import javax.swing.JButton;

public class BabyHangmanMethods {
	public void write_to_line(int line, String write){
		PrintWriter outputStream = null;
		Scanner inputStream = null;
		try{
			inputStream = new Scanner(new FileInputStream("BabyHangman.txt"));
		}catch(FileNotFoundException e){
			System.out.println("File not found");
			System.exit(0);
		}
		String [] lines = new String[100];
		for(int i = 0; i < lines.length; i++){
			try{
				lines[i] = inputStream.nextLine();
			}catch(NoSuchElementException ex){
				lines[i] = "";
			}
		}
		try{
			outputStream = new PrintWriter(new FileOutputStream("BabyHangman.txt"));
		}catch(FileNotFoundException e){
			System.out.println("Cannot open the file Auctions.txt");
			System.exit(0);
		}
		for(int i = 0; i < lines.length; i++){
			if(i+1 != line){
				outputStream.println(lines[i]);
			}else{
				outputStream.println(write);
			}
		}
		inputStream.close();
		outputStream.close();
	}
	//method reads and returns specified line
	public String read_from_line(int desired_line){
		Scanner inputStream = null;
		try{
			inputStream = new Scanner(new FileInputStream("Auctions.txt"));
		}catch(FileNotFoundException e){
			System.out.println("File not found");
			System.exit(0);
		}
		String line = "";
		for(int i = 0; i < desired_line; i++){
			if(i != desired_line - 1){
				inputStream.nextLine();
			}else{
				line = inputStream.nextLine();
			}
		}
		inputStream.close();
		return line;
	}
	JButton [] buttons = new JButton[6];
	public void makeButtons(){
		int random = (int)(Math.random() * 5);
		String word = read_from_line(random);
		int index = 0;
		for(JButton button: buttons){
			button = new JButton("" + word.charAt(index));
			index++;
		} 
			
	}
	

}
